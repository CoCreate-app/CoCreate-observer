/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************************!*\
  !*** ./src/CoCreate-observer.js ***!
  \**********************************/
eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// window.addEventListener(\"load\", () => {\nwindow.counter = 0;\nwindow.counter2 = 0;\n\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i = matches.length;\n\n    while (--i >= 0 && matches.item(i) !== this) {}\n\n    return i > -1;\n  };\n}\n\nvar configInput = _defineProperty({\n  attributes: true,\n  childList: true,\n  subtree: true,\n  characterData: false,\n  attributeOldValue: true\n}, \"characterData\", true);\n\nvar tasks = new Map();\nvar rules = new Map();\nvar arrayRules = [];\nvar CoCreateObserver = {\n  add: function add(_ref) {\n    var observe = _ref.observe,\n        include = _ref.include,\n        exclude = _ref.exclude,\n        attributes = _ref.attributes,\n        name = _ref.name,\n        task = _ref.task;\n    tasks.set(task, {\n      observe: observe,\n      include: include,\n      exclude: exclude,\n      attributes: attributes,\n      name: name\n    });\n  },\n  remove: function remove(_ref2) {\n    var task = _ref2.task;\n    tasks[\"delete\"](task);\n  },\n  addRule: function addRule(_ref3) {\n    var include = _ref3.include,\n        exclude = _ref3.exclude,\n        name = _ref3.name;\n    rules.set(name, {\n      include: include,\n      exclude: exclude\n    });\n    arrayRules = Array.from(rules);\n  },\n  removeRule: function addRule(_ref4) {\n    var name = _ref4.name;\n    rules[\"delete\"](name);\n    arrayRules = Array.from(rules);\n  }\n};\nwindow.CoCreateObserver = CoCreateObserver;\nvar observer = new MutationObserver(callback); // setTimeout(()=>{\n\nobserver.observe(document.body, configInput); // },5000)\n\nfunction callback(mutationsList, observer) {\n  var _iterator = _createForOfIteratorHelper(mutationsList),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var mutation = _step.value;\n      window.counter++;\n\n      var _iterator2 = _createForOfIteratorHelper(arrayRules),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              name = _step2$value[0],\n              _step2$value$ = _step2$value[1],\n              include = _step2$value$.include,\n              exclude = _step2$value$.exclude;\n\n          if (include && !mutation.target.matches(include)) return {\n            v: void 0\n          };\n          if (exclude && mutation.target.matches(exclude)) return {\n            v: void 0\n          };\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      tasks.forEach(function (_ref5, callback) {\n        var observe = _ref5.observe,\n            include = _ref5.include,\n            exclude = _ref5.exclude,\n            attributes = _ref5.attributes,\n            name = _ref5.name;\n        // if(mutation.attributeName == \"no-observe\") return;\n        if (!observe.includes(mutation.type)) return;\n        if (mutation.attributeName && attributes && !attributes.includes(mutation.attributeName)) return;\n        if (include && !mutation.target.matches(include)) return;\n        if (exclude && mutation.target.matches(exclude)) return;\n        window.counter2++; // console.log('counter 2 :' +  name , mutation.type, mutation.attributeName, mutation.oldValue, window.counter2)\n        // check old and new value \n\n        var newValue = mutation.target.getAttribute(mutation.attributeName);\n\n        if (mutation.oldValue && newValue != mutation.oldValue) {\n          callback.apply(null, [mutation]);\n        } else if (!mutation.oldValue) {\n          callback.apply(null, [mutation]);\n        }\n      });\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n\n      if (_typeof(_ret) === \"object\") return _ret.v;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n} // });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/CoCreate-observer.js\n");
/******/ })()
;